version: '3.6'

services:
  kong:
    container_name: api_gateway
    image: kong/kong-gateway:3.2.1.0
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=http://localhost:8002
    volumes:
      - ./configs/kong/kong.yml:/kong/declarative/kong.yml
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
      - 8002:8002
      - 8445:8445
      - 8003:8003
      - 8004:8004
    networks:
      - microservice
  user_service:
    container_name: user_service
    build:
      context: .
      dockerfile: ./Dockerfiles/user.Dockerfile
    image: tienpvse/user
    environment:
      - RABBITMQ_CONNECTION_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - NESTJS_USER_PORT=${NESTJS_USER_PORT}
      - NESTJS_JWT_KID=${NESTJS_JWT_KID}
      - NESTJS_USER_DATABASE_HOST=${NESTJS_USER_DATABASE_HOST}
      - USER_DATABASE_NAME=${USER_DATABASE_NAME}
      - USER_DATABASE_USERNAME=${USER_DATABASE_USERNAME}
      - USER_DATABASE_PASSWORD=${USER_DATABASE_PASSWORD}
      - NESTJS_USER_DATABASE_HOST=user_db
    networks:
      - microservice
  notification_service:
    container_name: notification_service
    build:
      context: .
      dockerfile: ./Dockerfiles/notification.Dockerfile
    image: tienpvse/notification
    environment:
      - RABBITMQ_CONNECTION_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - NESTJS_NOTIFICATION_PORT=${NESTJS_NOTIFICATION_PORT}
      - NESTJS_JWT_KID=${NESTJS_JWT_KID}
      - NESTJS_NOTIFICATION_DATABASE_CONNECTION_URL=${NESTJS_NOTIFICATION_DATABASE_CONNECTION_URL}
      - NOTIFICATION_DATABASE_USERNAME=${NOTIFICATION_DATABASE_USERNAME}
      - NOTIFICATION_DATABASE_PASSWORD=${NOTIFICATION_DATABASE_PASSWORD}
      - NESTJS_NOTIFICATION_DATABASE_CONNECTION_URL=mongodb://notification_db/nest
    networks:
      - microservice
  rabbitmq:
    container_name: rabbitmq
    image: 'bitnami/rabbitmq:latest'
    environment:
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_USERNAME=${RABBITMQ_USER}
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - microservice
  user_db:
    image: postgres:14.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=${USER_DATABASE_USERNAME-postgres}
      - POSTGRES_PASSWORD=${USER_DATABASE_PASSWORD-postgres}
      - POSTGRES_DB=${USER_DATABASE_NAME-postgres}
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - microservice
    ports:
      - 5432:5432
  notification_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${NOTIFICATION_DATABASE_USERNAME-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${NOTIFICATION_DATABASE_PASSWORD-mongo}
    networks:
      - microservice
    volumes:
      - notification_db_data:/data/db
    ports:
      - 27017:27017
  mongo_express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
      ME_CONFIG_MONGODB_URL: mongodb://${NOTIFICATION_DATABASE_USERNAME-mongo}:${NOTIFICATION_DATABASE_PASSWORD-mongo}@notification_db:27017/
    networks:
      - microservice
networks:
  microservice:
    name: microservice
volumes:
  user_db_data:
    name: user_db_data
  notification_db_data:
    name: notification_db_data
